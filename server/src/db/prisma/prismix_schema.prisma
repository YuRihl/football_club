// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
	provider = "sqlserver"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
}
model Contracts {
	EmployeeId Int 
	ContractExpiration DateTime 
	SalaryPerMonth Float 
	SalaryBonuses Float 
	ContractId Int @id
	ContractSign DateTime 
	Finances Finances @relation(name: "ContractsToFinances", fields: [ContractId], references: [DocumentId], onUpdate: NoAction)
	Employees Employees @relation(name: "ContractsToEmployees", fields: [EmployeeId], references: [Id], onUpdate: NoAction)
}
model Finances {
	DocumentId Int @id
	Contracts Contracts? @relation(name: "ContractsToFinances")
	Description String? @db.NVarChar(200)
	Budget Float 
	OperationDate DateTime? 
	OperationType Int? 
	FinanceType FinanceType? @relation(name: "FinanceTypeToFinances", fields: [OperationType], references: [TypeId], onDelete: NoAction)
	Results Results[] @relation(name: "FinancesToResults")
	@@index([OperationType, Description, Budget, OperationDate])
	@@index([OperationType])
}
model Employees {
	Id Int @id @default(autoincrement())
	Contracts Contracts[] @relation(name: "ContractsToEmployees")
	Name String @db.NVarChar(50)
	Surname String @db.NVarChar(50)
	Status String @db.NVarChar(50)
	Age Int 
	BirthDate DateTime 
	Country String? @db.NVarChar(50)
	Squad Squad? @relation(name: "EmployeesToSquad")
	Trainers Trainers? @relation(name: "EmployeesToTrainers")
}
model FinanceType {
	TypeId Int @id
	Finances Finances[] @relation(name: "FinanceTypeToFinances")
	Name String @db.NVarChar(20)
	@@index([Name], map: "nc_financeType")
}
model Matches {
	MatchDate DateTime @id
	Tour String? @db.NVarChar(5)
	Tournament String @db.NVarChar(50)
	AtHome Boolean? 
	Opponent String @db.NVarChar(50)
	Results Results @relation(name: "MatchesToResults", fields: [Tournament], references: [Tournament], onUpdate: NoAction)
}
model Results {
	Tournament String @id @db.NVarChar(50)
	Matches Matches[] @relation(name: "MatchesToResults")
	Place Int? 
	Income Float? 
	IncomeId Int 
	TelevisionRights Float? 
	StartPrize Float? 
	ResultPrize Float? 
	Finances Finances @relation(name: "FinancesToResults", fields: [IncomeId], references: [DocumentId], onUpdate: NoAction)
}
model Squad {
	Position String @db.NVarChar(5)
	Games Int 
	Goals Int 
	Assists Int 
	ShirtNumber Int 
	Id Int @id
	ShirtName String? @db.NVarChar(20)
	CleenSheets Int? 
	Employees Employees @relation(name: "EmployeesToSquad", fields: [Id], references: [Id], onUpdate: NoAction)
}
model Trainers {
	Id Int @id
	Name String @db.NVarChar(50)
	Surname String @db.NVarChar(50)
	Age Int? 
	Type String @db.NVarChar(50)
	Employees Employees @relation(name: "EmployeesToTrainers", fields: [Id], references: [Id], onUpdate: NoAction)
}